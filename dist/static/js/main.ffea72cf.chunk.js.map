{"version":3,"sources":["components/layout/signedinlinks.js","store/actions/authactions.js","components/layout/signedoutlinks.js","components/layout/navbar.js","components/dashboard/notifications.js","components/projects/projectsummary.js","components/projects/projectlist.js","components/dashboard/dashboard.js","components/projects/projectdetails.js","components/auth/signin.js","components/auth/signup.js","config/firebaseconfig.js","components/projects/createproject.js","store/actions/projects.js","App.js","serviceWorker.js","store/reducers/authreducer.js","store/reducers/projectreducer.js","store/reducers/rootreducer.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedoutLinks","state","console","log","firebase","links","uid","Notifications","notif","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","Signin","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","style","padding","marginTop","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","Signup","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initstate","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","firebaseConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ffea72cf.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signOut} from '../../store/actions/authactions';\r\n\r\nconst SignedinLinks = (props) => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to=\"/\" className=\"btn btn-floating orange ligten-2\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signOut:() => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedinLinks);","export const signIn = (credentials) => {\r\n    return (dispatch,getState,{getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({type:'LOGIN_SUCCESS'});\r\n        }).catch((err)=>{\r\n            dispatch({type:'LOGIN_ERROR',err});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return(dispatch,getState,{getFirebase})=>{\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type:'SIGNOUT_SUCCESS'})\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(newUser.email,newUser.password)\r\n        .then((res)=>{\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName:newUser.firstName,\r\n                lastName:newUser.lastName,\r\n                initials:newUser.firstName[0]+newUser.lastName[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type:'SIGNUP_SUCCESS'})\r\n        }).catch((err)=>{\r\n            dispatch({type:'SIGNUP_ERROR',err})\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst SignedoutLinks = () => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Sign In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedoutLinks;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignedinLinks from './signedinlinks';\r\nimport SignedoutLinks from './signedoutlinks';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const {auth,profile} = props;\r\n    const links = auth.uid ? <SignedinLinks profile={profile} /> : <SignedoutLinks/>\r\n    return(\r\n        <nav className=\"nav-wrapper blue darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">Project'Manager</Link>\r\n                {links}\r\n            </div>\r\n        </nav> \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return{\r\n        auth:state.firebase.auth,\r\n        profile:state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notif } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card blue lighten-5\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul>\r\n                        {notif && notif.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"orange-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return(\r\n        <div className=\"card project-summary blue lighten-5\">\r\n            <div className=\"card-content blue-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"blue-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './projectsummary';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return(\r\n        <div className=\"project-list section\">\r\n\r\n           {projects && projects.map(project => {\r\n               return(\r\n                    <Link to={'/project/'+project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n               )\r\n           })}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React,{Component} from 'react';\r\nimport Notifications from './notifications';\r\nimport ProjectList from '../projects/projectlist'\r\nimport {connect} from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Dashboard extends Component{\r\n    render(){\r\n        // console.log(this.props)\r\n        const {projects,auth,notif} = this.props\r\n        if(!auth.uid){\r\n            return <Redirect to=\"/signin\" />\r\n        }\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                <div className=\"col s12 m6\">\r\n                    <ProjectList projects={projects}/>\r\n                </div>\r\n                <div className=\"col s12 m5 offset-m1\">\r\n                    <Notifications notif={notif}/>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state);\r\n    return{\r\n        projects:state.firestore.ordered.projects,\r\n        auth:state.firebase.auth,\r\n        notif:state.firestore.ordered.notif\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects',orderBy:['createdAt','desc']},\r\n        {collection:'notif',limit:3,orderBy:['time','desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\n\r\nfunction ProjectDetails(props) {\r\n    // console.log(props)\r\n    // const id = props.match.params.id;\r\n    const {project,auth} = props;\r\n    if(!auth.uid){\r\n        return <Redirect to=\"/signin\" />\r\n    }\r\n    if(project){\r\n        return(\r\n            <div className=\"container project-details section\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action blue blue-text lighten-4\">\r\n                        <div className=\"blue-text text-darken-4\">Posted by - {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div className=\"blue-text text-darken-4\">{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading...</p>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) => {\r\n    // console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] :null;\r\n    return{\r\n        project:project,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{\r\n        collection:'projects'\r\n    }])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {signIn} from '../../store/actions/authactions';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Signin extends Component {\r\n    state = {\r\n        email:'',\r\n        password:''\r\n    }\r\n    handleChange = (e) => {\r\n        // console.log(e)\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const {authError,auth} = this.props;\r\n        if(auth.uid){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        return (\r\n            <div className=\"container blue lighten-5\">\r\n                <form onSubmit={this.handleSubmit} style={{padding:3+'%',marginTop:4+'%'}}>\r\n                    <h5 className=\"blue-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\" style={{marginTop:2+'%'}}>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn orange\">Sign in</button>\r\n                        <div className=\"red-text\">{authError?<p>{authError}</p>:null}</div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError:state.auth.authError,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signIn:(creds)=>{dispatch(signIn(creds))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Signin);\r\n","import React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {signUp} from '../../store/actions/authactions'\r\n\r\nclass Signup extends Component {\r\n    state = {\r\n        firstName:'',\r\n        lastName:'',\r\n        email:'',\r\n        password:''\r\n    }\r\n    handleChange = (e) => {\r\n        // console.log(e)\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.signUp(this.state);\r\n    }\r\n    render() {\r\n        const {auth,authError} = this.props;\r\n        if(auth.uid){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        return (\r\n            <div className=\"container blue lighten-5\">\r\n                <form onSubmit={this.handleSubmit} style={{padding:3+'%',marginTop:4+'%'}}>\r\n                    <h5 className=\"blue-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\" style={{marginTop:2+'%'}}>\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn orange\">Sign Up</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {authError?<p>{authError}</p>:null}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth:state.firebase.auth,\r\n        authError:state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signUp:(newUser)=>dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Signup);\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBrj3NnxH3T11WVEWimuwYM4U7qUPwGqdc\",\r\n    authDomain: \"project-manager-2dabf.firebaseapp.com\",\r\n    databaseURL: \"https://project-manager-2dabf.firebaseio.com\",\r\n    projectId: \"project-manager-2dabf\",\r\n    storageBucket: \"project-manager-2dabf.appspot.com\",\r\n    messagingSenderId: \"234961766295\",\r\n    appId: \"1:234961766295:web:ae579abb8542a40e4ba6d2\"\r\n  };\r\n  // Initialize Firebase\r\n  // firebase.initializeApp(firebaseConfig);\r\n  // firebase.firestore().settings({timestampsInSnapshots:true});\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  export const firestore = firebaseApp.firestore();\r\n  export default firebase;\r\n\r\n  ","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../store/actions/projects';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title:'',\r\n        content:''\r\n    }\r\n    handleChange = (e) => {\r\n        // console.log(e)\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const {auth} = this.props;\r\n        if(!auth.uid){\r\n            return <Redirect to=\"/signin\" />\r\n        }\r\n        return (\r\n            <div className=\"container blue lighten-5\">\r\n                <form onSubmit={this.handleSubmit} style={{padding:3+'%',marginTop:4+'%'}}>\r\n                    <h5 className=\"blue-text text-darken-3\">Create a New Project</h5>\r\n                    <div className=\"input-field\" style={{marginTop:2+'%'}}>\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn orange\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateMapToProps = (state) => {\r\n    return{\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        createProject:(project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(stateMapToProps,mapDispatchToProps)(CreateProject);\r\n","import {firestore} from '../../config/firebaseconfig'\r\nexport const createProject = (project) => {\r\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\r\n        //make async call\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;        \r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName:profile.firstName,\r\n            authorLastName:profile.lastName,\r\n            authorId:authorId,\r\n            createdAt: new Date()\r\n        }).then(()=>{\r\n            dispatch({\r\n                type:'ADD_PROJECT',\r\n                project:project\r\n            });\r\n        }).catch((err)=>{\r\n            dispatch({type:'CREATE_PROJECT_ERROR',err});\r\n        }) \r\n    }\r\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from './components/layout/navbar';\n// import {Switch,Route} from 'react-router-dom';\nimport Dashboard from './components/dashboard/dashboard'\nimport ProjectDetails from './components/projects/projectdetails';\nimport Signin from './components/auth/signin';\nimport Signup from './components/auth/signup';\nimport CreateProject from './components/projects/createproject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route path=\"/project/:id\" component={ProjectDetails}/>\n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/create\" component={CreateProject} />\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initstate = {\r\n    authError:null\r\n}\r\n\r\nconst authReducer = (state=initstate,action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return{\r\n                ...state,\r\n                authError:'Login Failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return{\r\n                ...state,\r\n                authError:action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initstate = {\r\n    projects:[\r\n        {id:1,title:'Eat',content:'Eat your food on time'},\r\n        {id:2,title:'Sleep',content:'Have a proper sleep'},\r\n        {id:3,title:'Repeat',content:'Repeat the cycle'},\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state=initstate,action) => {\r\n    switch(action.type){\r\n        case 'ADD_PROJECT':\r\n            console.log('Created Project',action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('Create project error',action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authreducer';\r\nimport projectReducer from './projectreducer';\r\nimport {combineReducers} from 'redux';\r\nimport {firestoreReducer} from 'redux-firestore';\r\nimport { firestore } from 'firebase';\r\nimport {firebaseReducer} from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    project:projectReducer,\r\n    firestore:firestoreReducer,\r\n    firebase:firebaseReducer\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore,applyMiddleware,compose} from 'redux';\nimport rootReducer from './store/reducers/rootreducer'\nimport {Provider} from 'react-redux'; \nimport thunk from 'redux-thunk';\nimport {reduxFirestore, getFirestore} from 'redux-firestore';\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase';\nimport firebaseConfig from './config/firebaseconfig';\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n    reactReduxFirebase(firebaseConfig,{useFirestoreForProfile:true, userProfile:'users', attachAuthIsReady:true}),\n    reduxFirestore(firebaseConfig)    \n  )\n);\n\nstore.firebaseAuthIsReady.then(()=>{\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}